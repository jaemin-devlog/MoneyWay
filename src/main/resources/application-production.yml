# ===================================================================
# PRODUCTION-SPECIFIC PROPERTIES
# ===================================================================
# 이 파일은 운영 환경을 위한 설정입니다.
# .env 파일에 정의된 환경 변수 이름을 직접 참조합니다.
# ===================================================================

server:
  port: 8080 # 운영 서버 포트

spring:
  # 운영 DB 연결 정보 (환경 변수 사용)
  datasource:
    url: jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQLDATABASE}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${MYSQLUSER}
    password: ${MYSQLPASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # 운영 Redis 연결 정보 (환경 변수 사용)
  data:
    redis:
      host: ${REDISHOST}
      port: ${REDISPORT}
      password: ${REDISPASSWORD}

  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        # [권장] MySQL Dialect를 명시적으로 설정하여 안정성을 높입니다.
        dialect: org.hibernate.dialect.MySQLDialect

  # 이메일 발송 설정 (환경 변수 사용)
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # OAuth2 클라이언트 설정 (카카오)
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - account_email
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# 로깅 레벨 설정
logging:
  level:
    com.example.moneyway: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate: INFO

# JWT, 외부 API 키 등 (환경 변수 사용)
jwt:
  issuer: ${JWT_ISSUER}
  secret-key: ${JWT_SECRET_KEY}

tourapi:
  service-key: ${TOUR_API_KEY}

OPENAI:
  API:
    KEY: ${OPENAI_API_KEY}

# OAuth2 로그인 성공 후 리다이렉트 될 프론트엔드 운영 주소
oauth:
  default-redirect-uri: ${OAUTH_DEFAULT_REDIRECT_URI}
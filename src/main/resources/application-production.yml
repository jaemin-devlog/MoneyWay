# ===================================================================
# PRODUCTION-SPECIFIC PROPERTIES
# ===================================================================
# 이 파일은 운영 환경을 위한 설정입니다.
# 민감한 정보(비밀번호, API 키 등)는 환경 변수를 통해 주입됩니다.
# ===================================================================

server:
  port: 8080 # 운영 서버 포트

spring:
  # 운영 DB 연결 정보 (환경 변수 사용)
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # 운영 Redis 연결 정보 (환경 변수 사용)
  data:
    redis:
      # Sentinel이나 Cluster를 사용하는 경우, 설정을 여기에 추가합니다.
      # 단일 노드 예시:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      # 운영 환경에서는 validate로 설정하여, 엔티티와 DB 스키마가 다를 경우 서버 실행을 막아 안전성을 높입니다.
      ddl-auto: validate
    # 운영 환경에서는 성능을 위해 SQL 로그를 비활성화합니다.
    show-sql: false
    properties:
      hibernate:
        format_sql: false # show-sql이 false이므로 이 설정은 의미 없지만, 일관성을 위해 false로 둡니다.

  # 이메일 발송 설정 (환경 변수 사용)
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # OAuth2 클라이언트 설정 (카카오)
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID} # 운영용 카카오 클라이언트 ID
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - account_email
              - profile_image # 프로필 이미지 정보 요청
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# 로깅 레벨 설정 (운영 환경에서는 INFO 레벨로 설정)
logging:
  level:
    com.example.moneyway: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate: INFO # SQL 로그는 비활성화하고, Hibernate 동작 로그는 INFO로 설정

# JWT, 외부 API 키 등 (환경 변수 사용)
jwt:
  issuer: ${JWT_ISSUER}
  secret-key: ${JWT_SECRET_KEY}

tourapi:
  service-key: ${TOUR_API_KEY}

openai:
  api:
    key: ${OPENAI_API_KEY}

# OAuth2 로그인 성공 후 리다이렉트 될 프론트엔드 운영 주소
oauth:
  default-redirect-uri: ${OAUTH_DEFAULT_REDIRECT_URI} # 예: https://moneyway-572cf.web.app